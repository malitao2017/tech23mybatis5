<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mapping.classMapper">

<!-- ##############一对一的操作################ -->
	<!-- 
                       根据班级id查询班级信息(带老师的信息)
        ##1. 联表查询
        SELECT * FROM class c,teacher t WHERE c.teacher_id=t.t_id AND c.c_id=1;
        
        ##2. 执行两次查询
        SELECT * FROM class WHERE c_id=1;  //teacher_id=1
        SELECT * FROM teacher WHERE t_id=1;//使用上面得到的teacher_id
     -->
     
     <!-- 方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集 封装联表查询的数据(去除重复的数据)-->
     <select id="getClass" parameterType="int" resultMap="classResultMap">
     	select * from class c,teacher t where c.teacher_id=t.t_id and c.c_id = #{id}  
     </select>
     <resultMap type="me.domain.Classes" id="classResultMap">
     	<id column="c_id" property="cid"/>
     	<result column="c_name" property="name"/>
     	<!-- 注： column="teacher_id" 可以不写 -->
     	<association property="teacher" column="teacher_id" javaType="me.domain.Teacher">
     		<id column="t_id" property="tid"/>
     		<result column="t_name" property="name"/>
     	</association>
     </resultMap>
     
     <!-- 方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型 -->
     <select id="getClass2" parameterType="int" resultMap="classResultMap2">
     	select * from class where c_id=#{ttt}
     </select>
     <resultMap type="me.domain.Classes" id="classResultMap2">
     	<id column="c_id" property="cid"/>
     	<result column="c_name" property="name"/>
		<association column="teacher_id" property="teacher" select="getTeacher" />
     </resultMap>
     
	 <select id="getTeacher" parameterType="int" resultType="me.domain.Teacher">
	 	select t_id as id,t_name as name from teacher where t_id=#{cid} 
	 </select>
	 
<!-- ##############一对多的操作################  -->
<!-- 	 方式一：嵌套结果  使用嵌套结果映射来处理重复的联合结果的子集 -->
	<select id="getClass3" parameterType="int" resultMap="classResultMap3">
		select * from class c ,teacher t ,student s where c.teacher_id=t.t_id and c.c_id=s.class_id and c.c_id=#{ddd}
	</select>
	<resultMap type="me.domain.Classes" id="classResultMap3">
		<id property="cid" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" column="teacher_id" javaType="me.domain.Teacher">
			<id property="tid" column="t_id"/>
			<result property="name" column="t_name"/>
		</association>
		<!-- 一对多  注意是ofType-->
		<collection property="students" column="c_id" ofType="me.domain.Student">
			<id property="sid" column="s_id"/>
			<result property="name" column="s_name"/>
		</collection>
	</resultMap>
<!-- 	 方式二：多次查询，通过执行另外一个sql映射语句类返回预测的复杂类型 -->
	<select id="getClass4" parameterType="int" resultMap="classResultMap4">
		select * from class where c_id = #{ccc}
	</select>
	<resultMap type="me.domain.Classes" id="classResultMap4">
		<id property="cid" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" column="teacher_id" javaType="me.domain.Teacher" select="getTeacher2"/>
		<collection property="students" column="c_id" ofType="me.domain.Student" select="getStudent"/>
	</resultMap>
<!-- 	注意别名 -->
	<select id="getTeacher2" parameterType="int" resultType="me.domain.Teacher">
		select t_id tid ,t_name name from teacher where t_id=#{teacher_id}
	</select>
	<select id="getStudent" parameterType="int" resultType="me.domain.Student">
		select s_id sid,s_name name from student where class_id=#{class_id}
	</select>
</mapper>



